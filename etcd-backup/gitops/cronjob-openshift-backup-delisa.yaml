---
kind: CronJob
apiVersion: batch/v1
metadata:
  name: openshift-backup
  labels:
    app: openshift-backup
spec:
  schedule: "0 * * * *"
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 5
  failedJobsHistoryLimit: 5
  jobTemplate:
    metadata:
      labels:
        app: openshift-backup
    spec:
      backoffLimit: 0
      template:
        metadata:
          labels:
            app: openshift-backup
        spec:
          containers:
            - name: backup
              image: quay.io/alopezme/aws-cli:latest
              command:
              - "/bin/bash"
              - "-c"
              - |
                #!/bin/bash

                # Get the first master node name
                MASTER_NAME=$(oc get no -l node-role.kubernetes.io/master --no-headers -o name | head -n 1)

                # Perform the backup on the first master node
                oc debug $MASTER_NAME --to-namespace=ocp-etcd-backup -- bash -c '
                  chroot /host sudo -E /usr/local/bin/cluster-backup.sh /home/core/backup/ &&
                  chroot /host sudo -E find /home/core/backup/ -type f -mmin +1 -delete
                '
              
              command:
                - "/bin/bash"
                - "-c"
                - oc get no -l node-role.kubernetes.io/master --no-headers -o name | xargs -I {} --  oc debug {}  --to-namespace=ocp-etcd-backup -- bash -c 'chroot /host sudo -E /usr/local/bin/cluster-backup.sh /home/core/backup/ && chroot /host sudo -E find /home/core/backup/ -type f -mmin +"1" -delete'
          restartPolicy: "Never"
          terminationGracePeriodSeconds: 30
          activeDeadlineSeconds: 500
          dnsPolicy: "ClusterFirst"
          serviceAccountName: "openshift-backup"
          serviceAccount: "openshift-backup"


oc debug $MASTER_NAME -- bash -c 'chroot /host sudo -E /usr/local/bin/cluster-backup.sh /tmp/'